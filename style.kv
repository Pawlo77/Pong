<DefaultButton@Button>:
    background_color: (0, 0, 0, 0)
    font_size: max(min(root.height / 2, root.width / 5), 1)
    text_size: self.size
    valign: "middle"
    halign: "center"

<OptionButton@DefaultButton>:
    canvas.before:
        Color: 
            rgba: (255, 255, 255, 1)
        Line:
            width: max(self.height / 40, 1)
            rectangle: self.x, self.y, max(self.width, 1), max(self.height, 1)

<ListButton@HoverableButton+DefaultButton>:
    canvas.before:
        Color: 
            rgba: (255, 255, 255, 1)
        Line:
            width: self.height / 40
            points: self.x, self.y, self.x + self.width, self.y
    on_press:
        self.root.handler(self.text, self.port)

<DefaultLabel@Label>:
    font_size: max(min(self.height / 2, self.width / 5), 1)
    text_size: self.size
    valign: "middle"
    halign: "center"

<NameLabel@DefaultLabel>:
    size_hint: (0.2, 0.1)

<ScoreLabel@DefaultLabel>:
    font_size: max(min(self.height / 15, self.width / 15), 1)

<BoxLayout>:
    orientation: "vertical"

<GridLayout>:
    spacing: root.height / 20
    padding: min(root.height / 5, root.width / 10)

<RecycleView>:
    viewclass: "ListButton"
    orientation: "vertical"

    RecycleBoxLayout:
        default_size: None, root.height / 4
        default_size_hint: (1, None)
        color: "white"
        orientation: "vertical"
        size_hint_y: None
        height: self.minimum_height

<Paddle>:
    canvas:
        Color:
            rgba: self.color
        Rectangle:
            pos: self.pos
            size: self.size


<Popup>:
    size_hint: (0.6, 0.6)
    auto_dismiss: False
    title_size: max(min(self.height / 10, self.width / 20), 1)

<TickingPopup>
    OptionButton:
        font_size: max(min(root.height * 2 / 3, root.width * 2 / 5), 1)
        size_hint: (0.4, 0.2)
        pos_hint: {"y": 0, "x": 0}
        text: root.exit_text
        on_press: 
            root.back_up()

<AcceptPopup>:     
    FloatLayout:        
        DefaultLabel:
            font_size: max(min(self.height / 3, self.width / 5), 1)
            size_hint: (0.8, 0.5)
            pos_hint: {"y": 0.5, "center_x": 0.5}
            text: "Are sure you want to play against " + root.client_name + " ?"
        
        DefaultLabel:
            size_hint: (0.8, 0.3)
            pos_hint: {"y": 0.2, "center_x": 0.5}
            text: "Decide in " + str(root.time) + " seconds..."

        OptionButton:
            font_size: max(min(root.height * 2 / 3, root.width * 2 / 5), 1)
            size_hint: (0.5, 0.2)
            pos_hint: {"y": 0, "right": 1}
            text: "Play"
            on_press: 
                root.accept()


<JoinPopup>:
    FloatLayout:
        DefaultLabel:
            font_size: max(min(self.height / 3, self.width / 5), 1)
            size_hint: (0.8, 0.5)
            pos_hint: {"y": 0.5, "center_x": 0.5}
            text: "Waiting for host to accept" + root.time % 4 * "."


<ErrorPopup>:
    FloatLayout:        
        DefaultLabel:
            font_size: max(min(self.height / 5, self.width / 5), 1)
            size_hint: (0.8, 0.7)
            pos_hint: {"y": 0.4, "center_x": 0.5}
            text: root.error

        OptionButton:
            font_size: max(min(root.height * 2 / 3, root.width * 2 / 5), 1)
            size_hint: (0.8, 0.3)
            pos_hint: {"y": 0, "center_x": 0.5}
            text: "Close"
            on_press: 
                root.dismiss()

<MenuScreen>:
    DefaultLabel:
        text: "MENU"
        font_size: min(self.height / 8, self.width / 8)
        pos_hint: {"center_x": 0.5, "center_y": 0.8}

    BoxLayout:
        size_hint: 0.8, 0.5
        pos_hint: {"center_x": 0.5, "y": 0.1}
        spacing: self.height / 20
        
        OptionButton:
            text: "Play alone"
            on_press:
                root.manager.transition.duration = root.settings.transition_duration
                root.manager.transition.direction = "up"
                root.manager.current = "game"
                root.manager.current_screen.set_up("solo")

        OptionButton: 
            text: "Play with friends"
            on_press:
                root.manager.transition.duration = root.settings.transition_duration
                root.manager.transition.direction = "left"
                root.manager.current = "connect"
    
        OptionButton: 
            text: "Stats"
            on_press:
                root.manager.transition.duration = root.settings.transition_duration
                root.manager.transition.direction = "right"
                root.manager.current = "stats"

        OptionButton: 
            text: "Exit"
            on_press:
                exit(0)

<ConnectScreen>:
    GridLayout:
        cols: 1
        rows: 4

        OptionButton:
            text: "Play on this PC"
            on_press:
                root.manager.transition.duration = root.settings.transition_duration
                root.manager.transition.direction = "up"
                root.manager.current = "game"
                root.manager.current_screen.set_up("offline")
        
        OptionButton:
            text: "Host game"
            on_press: 
                root.manager.transition.duration = root.settings.transition_duration
                root.manager.transition.direction = "left"
                root.manager.current = "name"
                root.manager.current_screen.next_screen = "server"
        
        OptionButton:
            text: "Join game"
            on_press: 
                root.manager.transition.duration = root.settings.transition_duration
                root.manager.transition.direction = "left"
                root.manager.current = "name"
                root.manager.current_screen.next_screen = "client"

        OptionButton:
            text: "Go back"
            on_press:
                root.manager.transition.duration = root.settings.transition_duration
                root.manager.transition.direction = "right"
                root.manager.current = "menu"

<NameScreen>
    username: username

    GridLayout:
        cols: 1
        rows: 4

        DefaultLabel:
            text: "Enter your username:"

        TextInput:
            id: username
            background_color: (0, 0, 0, 0)
            font_size: min(self.height * 2 / 3, self.width * 2 / 5)
            multiline: False
            text_size: self.size
            valign: "middle"
            halign: "center"

            canvas.before:
                Color: 
                    rgba: root.username_border_col
                Line:
                    width: self.height / 40
                    rectangle: self.x, self.y, self.width, self.height

        OptionButton:
            text: "Create Server" if root.next_screen == "server" else "Seek games"
            on_press:
                root.validate()

        OptionButton:
            text: "Go back"
            on_press:
                root.manager.transition.duration = root.settings.transition_duration
                root.manager.transition.direction = "right"
                root.manager.current = "connect"
                root.reset()


<ServerScreen>:
    DefaultLabel:
        text: "Waiting for players" + root.dots * "."
        pos_hint: {"center_x": 0.5, "y": 0.8}
        size_hint: (0.8, 0.2)

    DefaultLabel:
        size_hint: (0.5, 0.075)
        pos_hint: {"center_x": 0.5, "y": 0.725}
        text: "Session closes in: " + str(root.time) + " seconds..."

    DefaultLabel:
        size_hint: (0.5, 0.075)
        halign: "left"
        pos_hint: {"x": 0.1, "y": 0.65}
        text: "Join requests:"

    OptionButton:
        pos_hint: {"center_x": 0.5, "y": 0.02}
        size_hint: (0.3, 0.1)
        text: "Go back"
        on_press:
            root.manager.transition.duration = root.settings.transition_duration
            root.manager.transition.direction = "right"
            root.manager.current = "connect"
            root.reset()

    RecycleView:
        pos_hint: {"y": 0.2, "center_x": 0.5}
        size_hint: (0.8, 0.44)
        data: root.clients_list

<ClientScreen>
    DefaultLabel:
        text: "Searching servers" + root.dots * "."
        pos_hint: {"center_x": 0.5, "y": 0.8}
        size_hint: (0.8, 0.2)

    OptionButton:
        pos_hint: {"center_x": 0.5, "y": 0.02}
        size_hint: (0.3, 0.1)
        text: "Go back"
        on_press:
            root.manager.transition.duration = root.settings.transition_duration
            root.manager.transition.direction = "right"
            root.manager.current = "connect"
            root.reset()

    RecycleView:
        pos_hint: {"y": 0.2, "center_x": 0.5}
        size_hint: (0.8, 0.6)
        data: root.servers_list

<GameScreen>:
    player1: player1
    player2: player2
    ball: ball

    canvas:
        Color:
            rgba: (255, 255, 255, 0.8)
        Rectangle:
            pos: root.center_x - root.width / 200, 0
            size: root.width / 100, root.height * 0.4
        Rectangle:  
            pos: root.center_x - root.width / 200, self.height * 0.6
            size: root.width / 100, root.height * 0.25

    NameLabel:
        halign: "left"
        pos_hint: {"x": 0.02, "top": 0.98}
        text: player1.name if len(player1.name) < 8 else player1.name[:8] + "..."
        color: player1.color

    NameLabel:
        halign: "right"
        pos_hint: {"right": 0.98, "top": 0.98}
        text: player2.name if len(player2.name) < 8 else player2.name[:8] + "..."
        color: player2.color

    ScoreLabel:
        pos_hint: {"center_x": 0.25, "center_y": 0.9}
        text: str(player1.score)
        color: player1.color

    ScoreLabel:
        pos_hint: {"center_x": 0.75, "center_y": 0.9}
        text: str(player2.score)
        color: player2.color

    Label:
        id: streak
        color: "red" if root.cc else "white"
        font_size: root.height / 10
        pos_hint: {"center_x": 0.5, "center_y": 0.5}
        text: str(root.streak)

    Paddle:
        id: player1
        center_y: root.center_y
        x: self.width / 2
        size_hint: 0.02, 0.33
        
    Paddle:
        id: player2
        center_y: root.center_y
        right: root.right - self.width / 2
        size_hint: 0.02, 0.33

    Ball:
        id: ball
        canvas:
            Color:
                rgba: (255, 255, 255, 1) if root.gg else (255, 255, 255, 0)
            Ellipse:
                pos: self.pos
                size: self.size
        size_hint: None, None
        size: root.height / 20, root.height / 20

    DefaultButton:
        canvas.before: 
            Color:
                rgba: (255, 255, 255, 1)
            RoundedRectangle:
                pos: root.center_x - root.height / 22,  0.879 * root.height, 
                size: root.height / 11, root.height / 11  
                radius: [self.width / 2,]

            Color:
                rgba: (0, 0, 0, 1)
            RoundedRectangle:
                pos: root.center_x - root.height / 24,  0.8825 * root.height, 
                size: root.height / 12, root.height / 12
                radius: [self.width / 2,]

        background_color: (0, 0, 0, 0)
        font_size: min(self.height * 3 / 2, self.width * 2 / 3)
        pos_hint: {"center_x": 0.5, "center_y": 0.925}
        size_hint: (0.065, 0.075)
        text: "i"
        on_press:
            root.pause()
            root.manager.transition.duration = 0
            root.manager.current = "pause"

<PauseScreen>:
    DefaultLabel:
        text: "Game Paused"
        font_size: min(self.height / 8, self.width / 8)
        pos_hint: {"center_x": 0.5, "center_y": 0.8}

    BoxLayout:
        size_hint: 0.6, 0.4
        pos_hint: {"center_x": 0.5, "y": 0.2}
        spacing: self.height / 10

        OptionButton:
            text:
                "Resume"
            on_press:
                root.manager.transition.duration = 0
                root.manager.current = "game"
                root.manager.get_screen("game").start_countdown(root.manager.get_screen("game").unpause)

        OptionButton:
            text:
                "Go to menu"
            on_press:
                root.manager.transition.duration = root.settings.transition_duration
                root.manager.transition.direction = "down"
                root.manager.current = "menu"
                root.manager.get_screen("game").reset()

        OptionButton:
            text: "Exit"
            on_press: exit(0)